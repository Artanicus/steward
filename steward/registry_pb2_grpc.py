# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto.steward import asset_pb2 as proto_dot_steward_dot_asset__pb2
from proto.steward import maintenance_pb2 as proto_dot_steward_dot_maintenance__pb2
from proto.steward import schedule_pb2 as proto_dot_steward_dot_schedule__pb2
from proto.steward import user_pb2 as proto_dot_steward_dot_user__pb2


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUser = channel.unary_unary(
                '/steward.UserService/GetUser',
                request_serializer=proto_dot_steward_dot_user__pb2.GetUserRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_user__pb2.User.FromString,
                )
        self.CreateUser = channel.unary_unary(
                '/steward.UserService/CreateUser',
                request_serializer=proto_dot_steward_dot_user__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_user__pb2.User.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/steward.UserService/DeleteUser',
                request_serializer=proto_dot_steward_dot_user__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_user__pb2.User.FromString,
                )
        self.UpdateUser = channel.unary_unary(
                '/steward.UserService/UpdateUser',
                request_serializer=proto_dot_steward_dot_user__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_user__pb2.User.FromString,
                )
        self.ListUsers = channel.unary_stream(
                '/steward.UserService/ListUsers',
                request_serializer=proto_dot_steward_dot_user__pb2.ListUsersRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_user__pb2.User.FromString,
                )


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=proto_dot_steward_dot_user__pb2.GetUserRequest.FromString,
                    response_serializer=proto_dot_steward_dot_user__pb2.User.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=proto_dot_steward_dot_user__pb2.CreateUserRequest.FromString,
                    response_serializer=proto_dot_steward_dot_user__pb2.User.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=proto_dot_steward_dot_user__pb2.DeleteUserRequest.FromString,
                    response_serializer=proto_dot_steward_dot_user__pb2.User.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=proto_dot_steward_dot_user__pb2.UpdateUserRequest.FromString,
                    response_serializer=proto_dot_steward_dot_user__pb2.User.SerializeToString,
            ),
            'ListUsers': grpc.unary_stream_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=proto_dot_steward_dot_user__pb2.ListUsersRequest.FromString,
                    response_serializer=proto_dot_steward_dot_user__pb2.User.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'steward.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.UserService/GetUser',
            proto_dot_steward_dot_user__pb2.GetUserRequest.SerializeToString,
            proto_dot_steward_dot_user__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.UserService/CreateUser',
            proto_dot_steward_dot_user__pb2.CreateUserRequest.SerializeToString,
            proto_dot_steward_dot_user__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.UserService/DeleteUser',
            proto_dot_steward_dot_user__pb2.DeleteUserRequest.SerializeToString,
            proto_dot_steward_dot_user__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.UserService/UpdateUser',
            proto_dot_steward_dot_user__pb2.UpdateUserRequest.SerializeToString,
            proto_dot_steward_dot_user__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/steward.UserService/ListUsers',
            proto_dot_steward_dot_user__pb2.ListUsersRequest.SerializeToString,
            proto_dot_steward_dot_user__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MaintenanceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMaintenance = channel.unary_unary(
                '/steward.MaintenanceService/GetMaintenance',
                request_serializer=proto_dot_steward_dot_maintenance__pb2.GetMaintenanceRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_maintenance__pb2.Maintenance.FromString,
                )
        self.CreateMaintenance = channel.unary_unary(
                '/steward.MaintenanceService/CreateMaintenance',
                request_serializer=proto_dot_steward_dot_maintenance__pb2.Maintenance.SerializeToString,
                response_deserializer=proto_dot_steward_dot_maintenance__pb2.Maintenance.FromString,
                )
        self.DeleteMaintenance = channel.unary_unary(
                '/steward.MaintenanceService/DeleteMaintenance',
                request_serializer=proto_dot_steward_dot_maintenance__pb2.DeleteMaintenanceRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_maintenance__pb2.Maintenance.FromString,
                )
        self.UpdateMaintenance = channel.unary_unary(
                '/steward.MaintenanceService/UpdateMaintenance',
                request_serializer=proto_dot_steward_dot_maintenance__pb2.UpdateMaintenanceRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_maintenance__pb2.Maintenance.FromString,
                )
        self.ListMaintenances = channel.unary_stream(
                '/steward.MaintenanceService/ListMaintenances',
                request_serializer=proto_dot_steward_dot_maintenance__pb2.ListMaintenancesRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_maintenance__pb2.Maintenance.FromString,
                )


class MaintenanceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMaintenance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMaintenance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMaintenance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMaintenance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMaintenances(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MaintenanceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMaintenance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMaintenance,
                    request_deserializer=proto_dot_steward_dot_maintenance__pb2.GetMaintenanceRequest.FromString,
                    response_serializer=proto_dot_steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
            'CreateMaintenance': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMaintenance,
                    request_deserializer=proto_dot_steward_dot_maintenance__pb2.Maintenance.FromString,
                    response_serializer=proto_dot_steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
            'DeleteMaintenance': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMaintenance,
                    request_deserializer=proto_dot_steward_dot_maintenance__pb2.DeleteMaintenanceRequest.FromString,
                    response_serializer=proto_dot_steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
            'UpdateMaintenance': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMaintenance,
                    request_deserializer=proto_dot_steward_dot_maintenance__pb2.UpdateMaintenanceRequest.FromString,
                    response_serializer=proto_dot_steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
            'ListMaintenances': grpc.unary_stream_rpc_method_handler(
                    servicer.ListMaintenances,
                    request_deserializer=proto_dot_steward_dot_maintenance__pb2.ListMaintenancesRequest.FromString,
                    response_serializer=proto_dot_steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'steward.MaintenanceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MaintenanceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMaintenance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.MaintenanceService/GetMaintenance',
            proto_dot_steward_dot_maintenance__pb2.GetMaintenanceRequest.SerializeToString,
            proto_dot_steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMaintenance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.MaintenanceService/CreateMaintenance',
            proto_dot_steward_dot_maintenance__pb2.Maintenance.SerializeToString,
            proto_dot_steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMaintenance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.MaintenanceService/DeleteMaintenance',
            proto_dot_steward_dot_maintenance__pb2.DeleteMaintenanceRequest.SerializeToString,
            proto_dot_steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMaintenance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.MaintenanceService/UpdateMaintenance',
            proto_dot_steward_dot_maintenance__pb2.UpdateMaintenanceRequest.SerializeToString,
            proto_dot_steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMaintenances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/steward.MaintenanceService/ListMaintenances',
            proto_dot_steward_dot_maintenance__pb2.ListMaintenancesRequest.SerializeToString,
            proto_dot_steward_dot_maintenance__pb2.Maintenance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AssetServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAsset = channel.unary_unary(
                '/steward.AssetService/GetAsset',
                request_serializer=proto_dot_steward_dot_asset__pb2.GetAssetRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_asset__pb2.Asset.FromString,
                )
        self.CreateAsset = channel.unary_unary(
                '/steward.AssetService/CreateAsset',
                request_serializer=proto_dot_steward_dot_asset__pb2.Asset.SerializeToString,
                response_deserializer=proto_dot_steward_dot_asset__pb2.Asset.FromString,
                )
        self.DeleteAsset = channel.unary_unary(
                '/steward.AssetService/DeleteAsset',
                request_serializer=proto_dot_steward_dot_asset__pb2.DeleteAssetRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_asset__pb2.Asset.FromString,
                )
        self.UpdateAsset = channel.unary_unary(
                '/steward.AssetService/UpdateAsset',
                request_serializer=proto_dot_steward_dot_asset__pb2.UpdateAssetRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_asset__pb2.Asset.FromString,
                )
        self.ListAssets = channel.unary_stream(
                '/steward.AssetService/ListAssets',
                request_serializer=proto_dot_steward_dot_asset__pb2.ListAssetsRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_asset__pb2.Asset.FromString,
                )


class AssetServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAsset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAsset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAsset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAsset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAssets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AssetServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAsset,
                    request_deserializer=proto_dot_steward_dot_asset__pb2.GetAssetRequest.FromString,
                    response_serializer=proto_dot_steward_dot_asset__pb2.Asset.SerializeToString,
            ),
            'CreateAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAsset,
                    request_deserializer=proto_dot_steward_dot_asset__pb2.Asset.FromString,
                    response_serializer=proto_dot_steward_dot_asset__pb2.Asset.SerializeToString,
            ),
            'DeleteAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAsset,
                    request_deserializer=proto_dot_steward_dot_asset__pb2.DeleteAssetRequest.FromString,
                    response_serializer=proto_dot_steward_dot_asset__pb2.Asset.SerializeToString,
            ),
            'UpdateAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAsset,
                    request_deserializer=proto_dot_steward_dot_asset__pb2.UpdateAssetRequest.FromString,
                    response_serializer=proto_dot_steward_dot_asset__pb2.Asset.SerializeToString,
            ),
            'ListAssets': grpc.unary_stream_rpc_method_handler(
                    servicer.ListAssets,
                    request_deserializer=proto_dot_steward_dot_asset__pb2.ListAssetsRequest.FromString,
                    response_serializer=proto_dot_steward_dot_asset__pb2.Asset.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'steward.AssetService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AssetService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.AssetService/GetAsset',
            proto_dot_steward_dot_asset__pb2.GetAssetRequest.SerializeToString,
            proto_dot_steward_dot_asset__pb2.Asset.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.AssetService/CreateAsset',
            proto_dot_steward_dot_asset__pb2.Asset.SerializeToString,
            proto_dot_steward_dot_asset__pb2.Asset.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.AssetService/DeleteAsset',
            proto_dot_steward_dot_asset__pb2.DeleteAssetRequest.SerializeToString,
            proto_dot_steward_dot_asset__pb2.Asset.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.AssetService/UpdateAsset',
            proto_dot_steward_dot_asset__pb2.UpdateAssetRequest.SerializeToString,
            proto_dot_steward_dot_asset__pb2.Asset.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAssets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/steward.AssetService/ListAssets',
            proto_dot_steward_dot_asset__pb2.ListAssetsRequest.SerializeToString,
            proto_dot_steward_dot_asset__pb2.Asset.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ScheduleServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSchedule = channel.unary_unary(
                '/steward.ScheduleService/GetSchedule',
                request_serializer=proto_dot_steward_dot_schedule__pb2.GetScheduleRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_schedule__pb2.Schedule.FromString,
                )
        self.CreateSchedule = channel.unary_unary(
                '/steward.ScheduleService/CreateSchedule',
                request_serializer=proto_dot_steward_dot_schedule__pb2.Schedule.SerializeToString,
                response_deserializer=proto_dot_steward_dot_schedule__pb2.Schedule.FromString,
                )
        self.DeleteSchedule = channel.unary_unary(
                '/steward.ScheduleService/DeleteSchedule',
                request_serializer=proto_dot_steward_dot_schedule__pb2.DeleteScheduleRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_schedule__pb2.Schedule.FromString,
                )
        self.UpdateSchedule = channel.unary_unary(
                '/steward.ScheduleService/UpdateSchedule',
                request_serializer=proto_dot_steward_dot_schedule__pb2.UpdateScheduleRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_schedule__pb2.Schedule.FromString,
                )
        self.ListSchedules = channel.unary_stream(
                '/steward.ScheduleService/ListSchedules',
                request_serializer=proto_dot_steward_dot_schedule__pb2.ListSchedulesRequest.SerializeToString,
                response_deserializer=proto_dot_steward_dot_schedule__pb2.Schedule.FromString,
                )


class ScheduleServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSchedules(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ScheduleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSchedule,
                    request_deserializer=proto_dot_steward_dot_schedule__pb2.GetScheduleRequest.FromString,
                    response_serializer=proto_dot_steward_dot_schedule__pb2.Schedule.SerializeToString,
            ),
            'CreateSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSchedule,
                    request_deserializer=proto_dot_steward_dot_schedule__pb2.Schedule.FromString,
                    response_serializer=proto_dot_steward_dot_schedule__pb2.Schedule.SerializeToString,
            ),
            'DeleteSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSchedule,
                    request_deserializer=proto_dot_steward_dot_schedule__pb2.DeleteScheduleRequest.FromString,
                    response_serializer=proto_dot_steward_dot_schedule__pb2.Schedule.SerializeToString,
            ),
            'UpdateSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSchedule,
                    request_deserializer=proto_dot_steward_dot_schedule__pb2.UpdateScheduleRequest.FromString,
                    response_serializer=proto_dot_steward_dot_schedule__pb2.Schedule.SerializeToString,
            ),
            'ListSchedules': grpc.unary_stream_rpc_method_handler(
                    servicer.ListSchedules,
                    request_deserializer=proto_dot_steward_dot_schedule__pb2.ListSchedulesRequest.FromString,
                    response_serializer=proto_dot_steward_dot_schedule__pb2.Schedule.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'steward.ScheduleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ScheduleService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.ScheduleService/GetSchedule',
            proto_dot_steward_dot_schedule__pb2.GetScheduleRequest.SerializeToString,
            proto_dot_steward_dot_schedule__pb2.Schedule.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.ScheduleService/CreateSchedule',
            proto_dot_steward_dot_schedule__pb2.Schedule.SerializeToString,
            proto_dot_steward_dot_schedule__pb2.Schedule.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.ScheduleService/DeleteSchedule',
            proto_dot_steward_dot_schedule__pb2.DeleteScheduleRequest.SerializeToString,
            proto_dot_steward_dot_schedule__pb2.Schedule.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/steward.ScheduleService/UpdateSchedule',
            proto_dot_steward_dot_schedule__pb2.UpdateScheduleRequest.SerializeToString,
            proto_dot_steward_dot_schedule__pb2.Schedule.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSchedules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/steward.ScheduleService/ListSchedules',
            proto_dot_steward_dot_schedule__pb2.ListSchedulesRequest.SerializeToString,
            proto_dot_steward_dot_schedule__pb2.Schedule.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
